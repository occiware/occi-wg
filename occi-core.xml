<?xml version="1.0" encoding="UTF-8"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>OCCI Core Specification</title>

  <section>
    <title>Introduction</title>

    <para>The Open Cloud Computing Interface is an open protocol for cloud
    computing services. It is as close as possible to the underlying HyperText
    Transfer Protocol (HTTP), deviating only where absolutely necessary, and
    can be described as a "Resource Oriented Architecture (ROA)".<xref
    linkend="rws" /> All existing HTTP features are available for caching,
    proxying, gatewaying and other advanced functionality.</para>

    <para>Each resource (identified by a canonical URL) has one or more
    representations which may or may not be hypertext (e.g. HTML). Metadata
    including associations between resources is exposed via HTTP headers (e.g.
    the Link: header).</para>

    <para>In this way OCCI is not responsible for the representations
    themselves, rather it enables users to organise and group resources
    together to build arbitrarily complex systems and relies on existing
    standards for rendering. HTTP content negotiation is used to select
    between alternative representations, which can also be advertised by way
    of links.</para>

    <screen>&gt; GET /us-east/webapp/vm01 HTTP/1.1
&gt; User-Agent: occi-client/1.0 (linux) libcurl/7.19.4 OpenSSL/0.9.8k zlib/1.2.3
&gt; Host: cloud.example.com
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 10 Oct 2009 12:56:51 GMT
&lt; Expires: -1
&lt; Cache-Control: private, max-age=0
&lt; Content-Type: application/ovf
&lt; Link: &lt;/us-east/webapp/vm01;start&gt;;
&lt;       rel="http://purl.org/occi/action/start";
&lt;       title="Start"
&lt; Link: &lt;/us-east/webapp/build.pdf&gt;;
&lt;       rel="related";
&lt;       title="Documentation";
&lt;       type="application/pdf"
&lt; Category: compute;
&lt;       label="Compute Resource";
&lt;       scheme="http://purl.org/occi/kind/"
&lt; Server: occi-server/1.0
&lt; Connection: close
&lt;
&lt; &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt; &lt;Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
&lt;           xmlns:ovf="http://schemas.dmtf.org/ovf/envelope/1"
&lt;           xmlns="http://schemas.dmtf.org/ovf/envelope/1"
&lt;           xml:lang="en-US"&gt;
...</screen>
  </section>

  <section>
    <title>Basics</title>

    <bridgehead>URL Namespace</bridgehead>

    <para>The interface is defined by a single URL entry point which will
    either be a <glossterm>collection</glossterm>, contain
    <glossterm>link</glossterm>(s) to <glossterm>collection</glossterm>(s) or
    both.</para>

    <bridgehead>Kinds, Actions and Attributes</bridgehead>

    <para>An interface exposes "kinds" which have "attributes" and on which
    "actions" can be performed. The attributes are exposed as key-value pairs
    and applicable actions as links, following the REST hypertext constraint
    (whereby state transitions are defined <glossterm>in-band</glossterm>
    rather than via rules).</para>

    <bridgehead>CRUD Operations</bridgehead>

    <para>Create, Retrieve, Update and Delete (CRUD) operations map to the
    POST, GET, PUT and DELETE HTTP verbs respectively. HEAD and OPTIONS verbs
    may be used to retrieve metadata and valid operations without the entity
    body to improve performance. WebDAV definitions are used for MKCOL, MOVE
    and COPY.</para>

    <glosslist>
      <glossentry>
        <glossterm>POST (Create)</glossterm>

        <glossdef>
          <para><quote>The POST method is used to request that the origin
          server accept the entity enclosed in the request as a new
          subordinate of the resource identified by the Request-URI in the
          Request-Line.</quote><xref linkend="rfc2616" /></para>

          <para>POSTing a representation (e.g. OVF) to a collection (e.g.
          /compute) will result in a new resource being created (e.g.
          /compute/123) and returned in the Location: header. POST is also
          used with HTML form data to trigger verbs (e.g. restart)</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>GET (Retrieve - Metadata and Entity)</glossterm>

        <glossdef>
          <para><quote>The GET method means retrieve whatever information (in
          the form of an entity) is identified by the
          Request-URI.</quote><xref linkend="rfc2616" /></para>

          <para>GETting a resource (e.g. /compute/123) will return a
          representation of that resource in the most appropriate supported
          format specified by the client in the Accept header. Otherwise "406
          Not Acceptable" will be returned.</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>PUT (Create or Update)</glossterm>

        <glossdef>
          <para><quote>The PUT method requests that the enclosed entity be
          stored under the supplied Request-URI.</quote><xref
          linkend="rfc2616" /></para>

          <para>PUTting a representation (e.g. OVF) to a URL (e.g.
          /compute/123) will result in the resource being created or updated.
          The URL is known or selected by the client (in which case UUIDs
          should be used), in contrast to POSTs where the URL is selected by
          the server.</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>DELETE (Delete)</glossterm>

        <glossdef>
          <para><quote>The DELETE method requests that the origin server
          delete the resource identified by the Request-URI.</quote><xref
          linkend="rfc2616" /></para>

          <para>DELETE results in the deletion of the resource (and everything
          "under" it, as appropriate).</para>
        </glossdef>
      </glossentry>
    </glosslist>

    <para>Additionally the following HTTP methods are used:</para>

    <glosslist>
      <glossentry>
        <glossterm>COPY (Duplicate)</glossterm>

        <glossdef>
          <para><quote>The COPY method creates a duplicate of the source
          resource identified by the Request-URI, in the destination resource
          identified by the URI in the Destination header.</quote><xref
          linkend="rfc4918" /></para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>HEAD (Retrieve - Metadata Only)</glossterm>

        <glossdef>
          <para><quote>The HEAD method is identical to GET except that the
          server MUST NOT return a message-body in the response.</quote><xref
          linkend="rfc2616" /></para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>MKCOL (Make Collection)</glossterm>

        <glossdef>
          <para><quote>MKCOL creates a new collection resource at the location
          specified by the Request-URI.</quote><xref
          linkend="rfc4918" /></para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>MOVE (Relocate)</glossterm>

        <glossdef>
          <para><quote>The MOVE operation on a non-collection resource is the
          logical equivalent of a copy (COPY), followed by consistency
          maintenance processing, followed by a delete of the source, where
          all three actions are performed in a single operation.</quote><xref
          linkend="rfc4918" /></para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>OPTIONS</glossterm>

        <glossdef>
          <para><quote>The OPTIONS method represents a request for information
          about the communication options available on the request/response
          chain identified by the Request-URI.</quote><xref
          linkend="rfc2616" /></para>
        </glossdef>
      </glossentry>
    </glosslist>
  </section>

  <section>
    <title>Connection</title>

    <section>
      <title>Authentication</title>

      <para>Servers <emphasis>may</emphasis> require that requests be
      authenticated using standard HTTP-based authentication mechanisms
      (including OAuth).<xref linkend="oauth" /> They indicate this
      requirement by returning <code>HTTP 401</code> with a
      <code>WWW-Authenticate</code> header and a suitable challenge (e.g.
      <code>Basic</code>, <code>Digest</code>, <code>OAuth</code>). The client
      then includes appropriate <code>Authorization</code> headers in its
      responses.<xref linkend="rfc2617" /></para>

      <para>Servers <emphasis>may</emphasis> set and clients
      <emphasis>may</emphasis> accept <glossterm>cookies</glossterm> in order
      to maintain authentication state between requests. Such sessions
      <emphasis>should not</emphasis> be used for other purposes in line with
      RESTful principles.<xref linkend="rfc2109" /></para>
    </section>

    <section>
      <title>Versioning</title>

      <para>Every request <emphasis>should</emphasis> include an
      <computeroutput>occi.version</computeroutput> attribute indicating the
      version of the API requested (e.g.
      <computeroutput>1.0</computeroutput>). If none is provided the latest
      available version <emphasis>shall</emphasis> be used.</para>
    </section>
  </section>

  <section>
    <title>Model</title>

    <para>The model defines the objects themselves without regard to how they
    interrelate.</para>

    <section>
      <title>Kinds</title>

      <para>Each category of resources distinguished by some common
      characteristic or quality is called a <glossterm>kind</glossterm> (e.g.
      <computeroutput>compute</computeroutput>,
      <computeroutput>network</computeroutput>,
      <computeroutput>storage</computeroutput>,
      <computeroutput>queue</computeroutput>,
      <computeroutput>application</computeroutput>,
      <computeroutput>contact</computeroutput>).</para>

      <para>Kinds defined by this standard live in the
      <uri>http://purl.org/occi/kind/</uri> namespace but anyone can define a
      new kind by allocating a URI they control.</para>

      <warning>
        <para>Defining your own kinds can lead to interoperability problems
        and should be a last resort reserved for unique functionality. A
        simple peer review process is available for extending the registries
        which should be used where possible.</para>
      </warning>

      <para>Each resource <emphasis>must</emphasis> specify a kind by way of a
      <glossterm>category</glossterm> within the <glossterm>scheme</glossterm>
      <quote><uri>http://purl.org/occi/kind/</uri></quote>.</para>

      <tip>
        <para>The word <glossterm>type</glossterm> is not used in this context
        in order to avoid confusion with Internet media types.</para>
      </tip>
    </section>

    <section>
      <title>Attributes</title>

      <para>An <glossterm>attribute</glossterm> is a specification that
      defines a property of an object. It is expressed in the form of
      key-value pairs.</para>

      <para>Attributes are divided into namespaces which are separated by the
      dot character (<quote>.</quote>).</para>

      <tip>
        <para>This scalable approach was derived from the Mozilla Firefox
        <uri>about:config</uri> page.</para>
      </tip>

      <para>Attributes defined by this standard reside under the
      <computeroutput>occi</computeroutput> namespace (e.g.
      "<computeroutput>occi.abc</computeroutput>") but anyone can define a new
      attribute by allocating a unique namespace based on their reversed
      Internet domain (e.g.
      <quote><computeroutput>com.cisco.cdp</computeroutput></quote>). A number
      of attributes are common to all <glossterm>kind</glossterm>s.</para>

      <warning>
        <para>Defining your own attributes can lead to interoperability
        problems and should be a last resort reserved for unique
        functionality. A simple peer review process is available for extending
        the registries which should be used where possible.</para>
      </warning>
    </section>

    <section>
      <title>Actions</title>

      <para>An <glossterm>action</glossterm> is some process that can be
      carried out on one or more <glossterm>resource</glossterm>s.</para>

      <para>Each available <glossterm>action</glossterm> for a given
      <glossterm>resource</glossterm> is indicated via a
      <glossterm>link</glossterm> with the
      <computeroutput>action</computeroutput> class.</para>

      <screen>Link: &lt;/us-east/webapp/vm01;start&gt;;
      rel="http://purl.org/occi/action/start";
      title="Start"</screen>

      <para>Actions defined by this standard reside under the
      <uri>http://purl.org/occi/action/</uri> namespace but anyone can define
      a new action by allocating a URI they control.</para>

      <warning>
        <para>Defining your own actions can lead to interoperability problems
        and should be a last resort reserved for unique functionality. A
        simple peer review process is available for extending the registries
        which should be used where possible.</para>
      </warning>

      <para>An <glossterm>action</glossterm> is triggered via an HTTP POST and
      depending on the action requested (e.g.
      <computeroutput>resize</computeroutput>), parameters
      <emphasis>may</emphasis> be provided using HTML forms (e.g.
      <computeroutput>application/x-www-form-encoded</computeroutput>). In the
      case of HTML-based renderings the actions can therefore be actual HTML
      forms.</para>

      <tip>
        <para>Some resources can be interacted with but not rendered due to
        the nature of the resource or prevailing security policies (for
        example, an operator may be able to backup a machine without knowing
        anything about it).</para>
      </tip>

      <section>
        <title>Asynchronous Actions</title>

        <para>Synchronous actions <emphasis>may</emphasis> return
        <computeroutput>200 OK</computeroutput> on successful completion or
        <computeroutput>201 Created</computeroutput> with a
        <computeroutput>Location:</computeroutput> header indicating a new
        resource for audit purposes.</para>

        <tip>
          <para>Assume that clients are paranoid and want audit trails for all
          but the most trivial of actions.</para>
        </tip>

        <para>In the event that the <glossterm>action</glossterm> does not
        complete immediately it <emphasis>should</emphasis> return
        <computeroutput>HTTP 202 Accepted</computeroutput> and a
        <computeroutput>Location:</computeroutput> header indicating a new
        resource where status and other pertinent information can be
        obtained.</para>

        <tip>
          <para>Don't keep clients waiting - if you're not sure to return
          immediately then give them a resource they can monitor.</para>
        </tip>
      </section>

      <section>
        <title>Advanced Actions</title>

        <para>The specific parameters required and allowable values for them
        depend on the action and for advanced actions <emphasis>may</emphasis>
        require sending of custom <glossterm>content type</glossterm>s rather
        than
        <computeroutput>application/x-www-form-encoded</computeroutput>.</para>
      </section>
    </section>
  </section>

  <section>
    <title>Meta-model</title>

    <para>The meta-model defines how objects interrelate.</para>

    <section>
      <title>Categories</title>

      <para><glossterm>Category</glossterm> information allows for flexible
      organisation of resources into one or more vocabularies (each of which
      is referred to as a <glossterm>scheme</glossterm>).</para>

      <para>The meta-model was derived from Atom, consisting of three
      attributes:</para>

      <glosslist>
        <glossentry>
          <glossterm>term</glossterm>

          <glossdef>
            <para>The term itself (e.g.
            <quote><computeroutput>compute</computeroutput></quote>)</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>scheme (optional)</glossterm>

          <glossdef>
            <para>The vocabulary (e.g.
            <quote><computeroutput>http://purl.org/occi/kind/</computeroutput></quote>)</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>label (optional)</glossterm>

          <glossdef>
            <para>A human-friendly display name for the term (e.g.
            <quote><computeroutput>Compute
            Resource</computeroutput></quote>)</para>
          </glossdef>
        </glossentry>
      </glosslist>

      <screen>Category: compute;
      label="Compute Resource";
      scheme="http://purl.org/occi/kind/"</screen>

      <para>Category schemes and/or terms defined by this standard reside
      throughout the <uri>http://purl.org/occi/</uri> namespace but anyone can
      define a new scheme by allocating a URI they control.</para>

      <tip>
        <para>Categories provide a flexible way to manage resources by
        taxonomy (categories) and/or folksonomy (tags), where both can be
        shared between [groups of] users or globally. For example, users can
        create schemes for resource locations (e.g.
        <computeroutput>US-East</computeroutput>,
        <computeroutput>US-West</computeroutput>,
        <computeroutput>Europe</computeroutput>), operating systems (e.g.
        <computeroutput>Windows</computeroutput>,
        <computeroutput>Linux</computeroutput>) and patch levels (e.g.</para>
      </tip>

      <section>
        <title>Querying</title>

        <remark>TODO: Pull query interface from GData:
        http://code.google.com/apis/gdata/docs/2.0/reference.html#Queries</remark>
      </section>
    </section>

    <section>
      <title>Collections</title>

      <para>Where an operation could return multiple resources (e.g.
      categories, searches) this is referred to as a
      <glossterm>collection</glossterm>. Collections are returned as a list of
      links in <computeroutput>text/uri-list</computeroutput> format.</para>

      <tip>
        <para>Collections are passed by reference for simplicity rather than
        performance reasons, requiring O(n+1) requests. Including metadata
        (requiring a wrapper format like Atom or SOAP) and/or the data itself
        would provide O(1) performance, though passing by value should only be
        considered where the representations are known to be small as such
        encodings add significant overhead.</para>
      </tip>

      <para>Any given URL can be a collection and/or advertise
      <glossterm>link</glossterm>s to other <glossterm>collection</glossterm>s
      using the <computeroutput>collection</computeroutput> class.</para>

      <tip>
        <para>The root (<quote>/</quote>) <emphasis>should</emphasis> expose
        collections <glossterm>in-band</glossterm> and/or
        <glossterm>out-of-band</glossterm> in order for clients to discover
        resources.</para>
      </tip>

      <screen>Link: &lt;http://example.com/123/audit&gt;;
      rel="http://purl.org/occi/collection/audit";
      title="Audit Entries"</screen>

      <section>
        <title>Paging</title>

        <para>Collections <emphasis>may</emphasis> be divided into
        <glossterm>page</glossterm>s, with each linking to the
        <quote>first</quote>, <quote>last</quote>, <quote>next</quote> and
        <quote>previous</quote> <glossterm>link relation</glossterm>s.</para>

        <screen>Link: &lt;http://example.com/xyz;start=0&gt;; rel="first"
Link: &lt;http://example.com/xyz;start=400&gt;; rel="previous"
Link: &lt;http://example.com/xyz;start=500&gt;; rel="self"
Link: &lt;http://example.com/xyz;start=600&gt;; rel="next"
Link: &lt;http://example.com/xyz;start=900&gt;; rel="last"</screen>
      </section>
    </section>

    <section>
      <title>Linking</title>

      <para>Web linking standards for HTTP [<xref linkend="link" />] and HTML
      [<xref linkend="html5" />] are used to indicate associations between
      resources. All formats <emphasis>must</emphasis> support
      <glossterm>in-band</glossterm> linking including:</para>

      <itemizedlist>
        <listitem>
          <para>Link relations (e.g.
          <computeroutput>rel="alternate"</computeroutput>)</para>
        </listitem>

        <listitem>
          <para>Pointers to resources (e.g.
          <computeroutput>href="http://example.com/"</computeroutput>)</para>
        </listitem>

        <listitem>
          <para>Internet media types (e.g.
          <computeroutput>type="text/html"</computeroutput>)</para>
        </listitem>

        <listitem>
          <para>Extensibility (e.g.
          <computeroutput>attribute="value"</computeroutput>)</para>
        </listitem>
      </itemizedlist>

      <screen>Link: &lt;/us-east/webapp/build.pdf&gt;;
      rel="related";
      title="Documentation";
      type="application/pdf"</screen>

      <para><glossterm>Link relation</glossterm>s defined by this standard
      reside under the <uri>http://purl.org/occi/rel</uri> namespace but
      anyone can define a new <glossterm>link relation</glossterm> by
      allocating a URI they control.</para>
    </section>
  </section>

  <section>
    <title>Extensibility</title>

    <para>The interface is fully extensible, both via a public peer review
    process (in order to update the specification itself, usually via
    registries) and via independent allocation of unique namespaces (in order
    to cater for vendor-specific enhancements).</para>

    <section>
      <title>Foreign markup</title>

      <para>Implementations <emphasis>must</emphasis> accept and forward but
      otherwise ignore markup they do not understand.</para>
    </section>
  </section>

  <section>
    <title>Security Considerations</title>

    <para>Encryption is not required by the specification in order to cater
    for sites that do not or can not use it (e.g. due to export restrictions,
    performance reasons, etc.), however SSL/TLS <emphasis>should</emphasis> be
    used over public networks including the Internet.</para>
  </section>

  <glossary>
    <glossentry>
      <glossterm>in-band</glossterm>

      <glossdef>
        <para><quote>Sending of metadata and control information in the same
        band, on the same channel, as used for data</quote>, for example, by
        embedding it in HTML. [<uri
        xlink:href="http://en.wikipedia.org/wiki/In-band">http://en.wikipedia.org/wiki/In-band</uri>]</para>
      </glossdef>
    </glossentry>

    <glossentry>
      <glossterm>kind</glossterm>

      <glossdef>
        <para><quote>A category of things distinguished by some common
        characteristic or quality</quote>, for example events, messages,
        media. [<uri
        xlink:href="http://wordnetweb.princeton.edu/perl/webwn?s=kind">http://wordnetweb.princeton.edu/perl/webwn?s=kind</uri>]</para>
      </glossdef>
    </glossentry>

    <glossentry>
      <glossterm>out-of-band</glossterm>

      <glossdef>
        <para><quote>Communications which occur outside of a previously
        established communications method or channel</quote>, for example, in
        HTTP headers. [<uri
        xlink:href="http://en.wikipedia.org/wiki/Out-of-band_signaling">http://en.wikipedia.org/wiki/Out-of-band_signaling</uri>]</para>
      </glossdef>
    </glossentry>

    <glossentry>
      <glossterm>type</glossterm>

      <glossdef>
        <para>Internet media (<acronym>MIME</acronym>) type as defined by
        <xref linkend="rfc2045" /> and <xref linkend="rfc2046" /></para>
      </glossdef>
    </glossentry>
  </glossary>

  <bibliography>
    <bibliomixed>Normative References</bibliomixed>

    <biblioentry xreflabel="RFC2045" xml:id="rfc2045">
      <title>RFC 2045 - Multipurpose Internet Mail Extensions (MIME) Part One:
      Format of Internet Message Bodies</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2045">http://tools.ietf.org/html/rfc2045</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>1996-11</date>
    </biblioentry>

    <biblioentry xreflabel="RFC2046" xml:id="rfc2046">
      <title>RFC 2046 - Multipurpose Internet Mail Extensions (MIME) Part Two:
      Media Types</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2046">http://tools.ietf.org/html/rfc2046</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>1996-11</date>
    </biblioentry>

    <biblioentry xreflabel="RFC2109" xml:id="rfc2109">
      <title>RFC 2109 - HTTP State Management Mechanism</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2109">http://tools.ietf.org/html/rfc2109</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>1997-02</date>
    </biblioentry>

    <biblioentry xreflabel="RFC2616" xml:id="rfc2616">
      <title>RFC 2616 - Hypertext Transfer Protocol -- HTTP/1.1</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2616">http://tools.ietf.org/html/rfc2616</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>1999-06</date>
    </biblioentry>

    <biblioentry xreflabel="RFC2617" xml:id="rfc2617">
      <title>RFC 2617 - HTTP Authentication: Basic and Digest Access
      Authentication</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2616">http://tools.ietf.org/html/rfc2617</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>1999-06</date>
    </biblioentry>

    <biblioentry xreflabel="RFC3339" xml:id="rfc3339">
      <title>RFC 3339 - Date and Time on the Internet: Timestamps</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc3339">http://tools.ietf.org/html/rfc3339</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>2002-07</date>
    </biblioentry>

    <biblioentry xreflabel="RFC4918" xml:id="rfc4918">
      <title>RFC 4918 - HTTP Extensions for Web Distributed Authoring and
      Versioning (WebDAV)</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2616">http://tools.ietf.org/html/rfc4918</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>2007-06</date>
    </biblioentry>

    <biblioentry xreflabel="OpenSearch" xml:id="opensearch">
      <title>OpenSearch 1.1</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2616">http://www.opensearch.org/Specifications/OpenSearch/1.1</uri></address>

      <org>
        <orgname>A9.com, Inc. (an Amazon company)</orgname>
      </org>

      <author>
        <personname>Clinton DeWitt</personname>
      </author>

      <collab>
        <personname>Joel Tesler</personname>
      </collab>

      <collab>
        <personname>Michael Fagan</personname>
      </collab>

      <collab>
        <personname>Joe Gregorio</personname>
      </collab>

      <collab>
        <personname>Aaron Sauve</personname>
      </collab>

      <collab>
        <personname>James Snell</personname>
      </collab>

      <date>2009</date>
    </biblioentry>

    <bibliomixed>Informative References</bibliomixed>

    <biblioentry xreflabel="RFC4287" xml:id="rfc4287">
      <title>RFC 4287 - The Atom Syndication Format</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc4287">http://tools.ietf.org/html/rfc4287</uri></address>

      <author>
        <personname>Robert Syre</personname>
      </author>

      <author>
        <personname>Mark Nottingham</personname>
      </author>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <date>2005-12</date>
    </biblioentry>

    <biblioentry xreflabel="HTML5" xml:id="html5">
      <title>HTML 5</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc4287">http://www.w3.org/TR/html5/</uri></address>

      <author>
        <personname>Ian Hickson</personname>

        <affiliation>
          <org>
            <orgname>Google, Inc.</orgname>
          </org>
        </affiliation>
      </author>

      <author>
        <personname>David Hyatt</personname>

        <affiliation>
          <org>
            <orgname>Apple, Inc.</orgname>
          </org>
        </affiliation>
      </author>

      <org>
        <orgname>World Wide Web Consortium (W3C)</orgname>
      </org>

      <date>2009-08-25</date>
    </biblioentry>

    <biblioentry xreflabel="OAuth" xml:id="oauth">
      <title>OAuth</title>

      <address><uri xlink:href="http://tools.ietf.org/html/rfc2616">http://oauth.net/core/1.0</uri></address>

      <org>
        <orgname>OAuth Core Workgroup</orgname>
      </org>

      <address><email>spec@oauth.net</email></address>

      <date>2007-12-04</date>
    </biblioentry>

    <biblioentry xreflabel="RWS" xml:id="rws">
      <title>RESTful Web Services</title>

      <address><uri xlink:href="http://oreilly.com/catalog/9780596529260/">http://oreilly.com/catalog/9780596529260/</uri></address>

      <biblioid class="isbn">9780596529260</biblioid>

      <org>
        <orgname>O'Reilly Media</orgname>
      </org>

      <author>
        <personname>Leonard Richardson</personname>
      </author>

      <author>
        <personname>Sam Ruby</personname>
      </author>

      <date>2007-05</date>
    </biblioentry>

    <biblioentry xreflabel="LINK" xml:id="link">
      <title>Web Linking</title>

      <address><uri
          xlink:href="http://tools.ietf.org/html/draft-nottingham-http-link-header">http://tools.ietf.org/html/draft-nottingham-http-link-header</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <author>
        <personname>Mark Nottingham</personname>
      </author>

      <date>2009-07-12</date>
    </biblioentry>

    <biblioentry xreflabel="CATEGORY" xml:id="category">
      <title>Web Categories</title>

      <address><uri
          xlink:href="http://tools.ietf.org/html/draft-johnston-http-category-header">http://tools.ietf.org/html/draft-johnston-http-category-header</uri></address>

      <org>
        <orgname>Internet Engineering Task Force (IETF)</orgname>
      </org>

      <author>
        <personname>Sam Johnston</personname>
      </author>

      <date>2009-07-1</date>
    </biblioentry>
  </bibliography>
</article>
